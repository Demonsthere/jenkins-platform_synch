<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>30</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>10</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>BACKUP_TO_SERVER</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VERSION</name>
          <description>http://downloads.raspberrypi.org/${FLAVOUR}/images</description>
          <defaultValue>2016-05-31</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>FLAVOUR</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>raspbian_lite</string>
              <string>raspbian</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.25"/>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty plugin="shelve-project-plugin@1.5"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>qemu</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Get base image
wget -r -q --no-parent -nH --cut-dirs 3 -e robots=off -A zip http://downloads.raspberrypi.org/${FLAVOUR}/images/${FLAVOUR}-${VERSION}/
unzip *.zip
rm *.zip


</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Calculate second partition start
mkdir system
fdisk -l *.img &gt; sectors.txt
Start=&quot;$(cat sectors.txt | grep .img2 | awk {&apos;print $2&apos;})&quot;
SIZE=$(($Start * 512))

# Disable preload on system
sudo mount *.img -o loop,offset=${SIZE} system
sudo sed -i &apos;1s/^/#/&apos; system/etc/ld.so.preload
cat system/etc/ld.so.preload

# Add qemu static binary
sudo cp /usr/bin/qemu-arm-static system/usr/bin/

sudo umount system</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Zip &amp; ship
zip ${FLAVOUR}-${VERSION}.zip *.img 
rm *.img

if [ &quot;${BACKUP_TO_SERVER}&quot; = true ] ; then
    scp *.zip root@apache.pitux.ovh:/var/www/html/data/images
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>raspbian*.zip</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.25">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>